@page "/AdmWorkshop"

@using AdminApp.Data
@using AdminApp.Shared.Workshops
@using System.Net.Http.Json
@inject HttpClient Http

<h1>Workshop Administration</h1>

<p>Adminstrate workshops</p>

@if (approvedWorkshops == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Navn</th>
                <th>Godkendt</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var workshop in approvedWorkshops)
            {
            <tr>
                <td>@workshop.Name</td>
                <td>@workshop.Approved</td>
                <td><button @onclick="@(() => ChangeApprovedState(workshop))" /> </td>
            </tr>
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Navn</th>
                <th>Godkendt</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var workshop in pendingWorkshops)
            {
                <tr>
                    <td>@workshop.Name</td>
                    <td >@workshop.Approved</td>
                    <td><button @onclick="@(() => ChangeApprovedState(workshop))"/> </td>
                    
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WorkshopModel[] approvedWorkshops;
    private WorkshopModel[] pendingWorkshops;
    

    protected override async Task OnInitializedAsync()
    {
        approvedWorkshops = await Http.GetFromJsonAsync<WorkshopModel[]>("api/workshop");
        pendingWorkshops = await Http.GetFromJsonAsync<WorkshopModel[]>("api/workshop/pending");
        StateHasChanged();
    }
    private async Task ChangeApprovedState(WorkshopModel workshop)
    {
        await Http.GetAsync("api/workshop/approve/" + workshop.Id);
    }
}
